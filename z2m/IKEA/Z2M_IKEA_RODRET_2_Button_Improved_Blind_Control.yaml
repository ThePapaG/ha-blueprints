---
# This automation simulates the use of the IKEA RODRET Blind control
# connected through Z2M.

# | Button      | Action                                                  |
# | ----------- | ------------------------------------------------------- |
# | on (short)  | open the blind  |
# | off (short) | close the blind                                      |
# | on (long)   | Open the blind until release                                     |
# | off (long)  | Close blind until release                                     |

blueprint:
  source_url: https://github.com/ThePapaG/ha-blueprints/blob/main/z2m/IKEA/Z2M_IKEA_RODRET_2_Button_Improved_Blind_Control.yaml

  name: Z2M - IKEA RODRET - 2 Button Remote - Blind Control with no percentage

  description: >-
    This automation simulates the use of the IKEA RODRET to control a blind without position
    connected through Z2M.

  domain: automation

  input:
    remote:
      name: IKEA RODRET remote control
      description: Select the remote control you wish to use.
      selector:
        entity:
          integration: mqtt
          domain: sensor
    cover:
      name: Cover
      description: Select the cover entity you wish to control.
      selector:
        entity:
          filter:
            - domain: cover
    repeats:
      name: Repeats
      description: How many times to repeat a command (accounts for poor connection).
      selector:
        number:
          min: 1
          max: 5
          step: 1
          mode: slider
      default: 1

mode: single

trigger:
  - platform: state
    entity_id: 
      - !input "remote"

variables:
  var_repeats: !input repeats
  var_cover: !input cover
  command: '{{ trigger.to_state.state }}'

condition:
  - condition: template
    value_template: "{{ command != ''}}"

action:
  - choose:
      # Short up or long up
      - conditions:
          - or:
              - condition: template
                value_template: "{{ command == 'on' }}"
              - condition: template
                value_template: "{{ command == 'brightness_move_up' }}"
        # Open the blind
        sequence:
          - repeat:
              count: 2
              sequence:
                - service: cover.open_cover
                  metadata: {}
                  data: {}
                  target:
                    entity_id: cover.front_blind
      # Short down or long down
      - conditions:
          - or:
              - condition: template
                value_template: "{{ command == 'off' }}"
              - condition: template
                value_template: "{{ command == 'brightness_move_down' }}"
        # Close the blind
        sequence:
          - repeat:
              count: 2
              sequence:
                - service: cover.close_cover
                  metadata: {}
                  data: {}
                  target:
                    entity_id: cover.front_blind
    # Any other action (including release) should stop the blind in its tracks 
    default:
      - repeat:
          count: 2
          sequence:
            - service: cover.stop_cover
              metadata: {}
              data: {}
              target:
                entity_id: cover.front_blind
